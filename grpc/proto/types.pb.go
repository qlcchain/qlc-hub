// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: types.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nep5Address  string `protobuf:"bytes,1,opt,name=nep5Address,proto3" json:"nep5Address,omitempty"`
	Erc20Address string `protobuf:"bytes,2,opt,name=erc20Address,proto3" json:"erc20Address,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

func (x *PingResponse) GetNep5Address() string {
	if x != nil {
		return x.Nep5Address
	}
	return ""
}

func (x *PingResponse) GetErc20Address() string {
	if x != nil {
		return x.Erc20Address
	}
	return ""
}

type DepositLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nep5TxHash string `protobuf:"bytes,1,opt,name=nep5TxHash,proto3" json:"nep5TxHash,omitempty"`
	Amount     int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	RHash      string `protobuf:"bytes,3,opt,name=rHash,proto3" json:"rHash,omitempty"`
	Addr       string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *DepositLockRequest) Reset() {
	*x = DepositLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositLockRequest) ProtoMessage() {}

func (x *DepositLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositLockRequest.ProtoReflect.Descriptor instead.
func (*DepositLockRequest) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *DepositLockRequest) GetNep5TxHash() string {
	if x != nil {
		return x.Nep5TxHash
	}
	return ""
}

func (x *DepositLockRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositLockRequest) GetRHash() string {
	if x != nil {
		return x.RHash
	}
	return ""
}

func (x *DepositLockRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type DepositFetchNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RHash      string `protobuf:"bytes,1,opt,name=rHash,proto3" json:"rHash,omitempty"`
	Nep5TxHash string `protobuf:"bytes,2,opt,name=nep5TxHash,proto3" json:"nep5TxHash,omitempty"`
}

func (x *DepositFetchNoticeRequest) Reset() {
	*x = DepositFetchNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFetchNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFetchNoticeRequest) ProtoMessage() {}

func (x *DepositFetchNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFetchNoticeRequest.ProtoReflect.Descriptor instead.
func (*DepositFetchNoticeRequest) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *DepositFetchNoticeRequest) GetRHash() string {
	if x != nil {
		return x.RHash
	}
	return ""
}

func (x *DepositFetchNoticeRequest) GetNep5TxHash() string {
	if x != nil {
		return x.Nep5TxHash
	}
	return ""
}

type WithDrawUnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nep5TxHash string `protobuf:"bytes,1,opt,name=nep5TxHash,proto3" json:"nep5TxHash,omitempty"`
	ROrigin    string `protobuf:"bytes,2,opt,name=rOrigin,proto3" json:"rOrigin,omitempty"`
}

func (x *WithDrawUnlockRequest) Reset() {
	*x = WithDrawUnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithDrawUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithDrawUnlockRequest) ProtoMessage() {}

func (x *WithDrawUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithDrawUnlockRequest.ProtoReflect.Descriptor instead.
func (*WithDrawUnlockRequest) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *WithDrawUnlockRequest) GetNep5TxHash() string {
	if x != nil {
		return x.Nep5TxHash
	}
	return ""
}

func (x *WithDrawUnlockRequest) GetROrigin() string {
	if x != nil {
		return x.ROrigin
	}
	return ""
}

type EventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	StateStr string `protobuf:"bytes,2,opt,name=stateStr,proto3" json:"stateStr,omitempty"`
	RHash    string `protobuf:"bytes,3,opt,name=rHash,proto3" json:"rHash,omitempty"`
	TxHash   string `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *EventResponse) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *EventResponse) GetStateStr() string {
	if x != nil {
		return x.StateStr
	}
	return ""
}

func (x *EventResponse) GetRHash() string {
	if x != nil {
		return x.RHash
	}
	return ""
}

func (x *EventResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type StateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State             int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	StateStr          string `protobuf:"bytes,2,opt,name=stateStr,proto3" json:"stateStr,omitempty"`
	RHash             string `protobuf:"bytes,3,opt,name=rHash,proto3" json:"rHash,omitempty"`
	ROrigin           string `protobuf:"bytes,4,opt,name=rOrigin,proto3" json:"rOrigin,omitempty"`
	LockedNep5Hash    string `protobuf:"bytes,5,opt,name=lockedNep5Hash,proto3" json:"lockedNep5Hash,omitempty"`
	LockedErc20Hash   string `protobuf:"bytes,6,opt,name=lockedErc20Hash,proto3" json:"lockedErc20Hash,omitempty"`
	UnlockedNep5Hash  string `protobuf:"bytes,7,opt,name=unlockedNep5Hash,proto3" json:"unlockedNep5Hash,omitempty"`
	UnlockedErc20Hash string `protobuf:"bytes,8,opt,name=unlockedErc20Hash,proto3" json:"unlockedErc20Hash,omitempty"`
	LockedHeight      int64  `protobuf:"varint,9,opt,name=lockedHeight,proto3" json:"lockedHeight,omitempty"`
	UnlockedHeight    int64  `protobuf:"varint,10,opt,name=unlockedHeight,proto3" json:"unlockedHeight,omitempty"`
}

func (x *StateInfo) Reset() {
	*x = StateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateInfo) ProtoMessage() {}

func (x *StateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateInfo.ProtoReflect.Descriptor instead.
func (*StateInfo) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *StateInfo) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *StateInfo) GetStateStr() string {
	if x != nil {
		return x.StateStr
	}
	return ""
}

func (x *StateInfo) GetRHash() string {
	if x != nil {
		return x.RHash
	}
	return ""
}

func (x *StateInfo) GetROrigin() string {
	if x != nil {
		return x.ROrigin
	}
	return ""
}

func (x *StateInfo) GetLockedNep5Hash() string {
	if x != nil {
		return x.LockedNep5Hash
	}
	return ""
}

func (x *StateInfo) GetLockedErc20Hash() string {
	if x != nil {
		return x.LockedErc20Hash
	}
	return ""
}

func (x *StateInfo) GetUnlockedNep5Hash() string {
	if x != nil {
		return x.UnlockedNep5Hash
	}
	return ""
}

func (x *StateInfo) GetUnlockedErc20Hash() string {
	if x != nil {
		return x.UnlockedErc20Hash
	}
	return ""
}

func (x *StateInfo) GetLockedHeight() int64 {
	if x != nil {
		return x.LockedHeight
	}
	return 0
}

func (x *StateInfo) GetUnlockedHeight() int64 {
	if x != nil {
		return x.UnlockedHeight
	}
	return 0
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *Boolean) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_types_proto protoreflect.FileDescriptor

var file_types_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x54, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x70, 0x35, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x70, 0x35, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x65, 0x70, 0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6e, 0x65, 0x70, 0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x51, 0x0a,
	0x19, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x70, 0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x70, 0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x51, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x70,
	0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x70, 0x35, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x22, 0x6f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x22, 0xe5, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4e, 0x65,
	0x70, 0x35, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x4e, 0x65, 0x70, 0x35, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x72, 0x63, 0x32, 0x30, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x72, 0x63,
	0x32, 0x30, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x4e, 0x65, 0x70, 0x35, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4e, 0x65, 0x70, 0x35, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x72,
	0x63, 0x32, 0x30, 0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x72, 0x63, 0x32, 0x30, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x1f, 0x0a, 0x07,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xa1, 0x02,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x50, 0x49, 0x12, 0x52, 0x0a, 0x0b,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d,
	0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a,
	0x12, 0x67, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x14, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x56, 0x0a, 0x0c, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x30,
	0x01, 0x32, 0xc4, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x41, 0x50,
	0x49, 0x12, 0x5b, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x2f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x58,
	0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x32, 0x98, 0x01, 0x0a, 0x08, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x41, 0x50, 0x49, 0x12, 0x48, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x42, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData = file_types_proto_rawDesc
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_proto_rawDescData)
	})
	return file_types_proto_rawDescData
}

var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_types_proto_goTypes = []interface{}{
	(*PingResponse)(nil),              // 0: proto.PingResponse
	(*DepositLockRequest)(nil),        // 1: proto.DepositLockRequest
	(*DepositFetchNoticeRequest)(nil), // 2: proto.DepositFetchNoticeRequest
	(*WithDrawUnlockRequest)(nil),     // 3: proto.WithDrawUnlockRequest
	(*EventResponse)(nil),             // 4: proto.EventResponse
	(*StateInfo)(nil),                 // 5: proto.StateInfo
	(*Boolean)(nil),                   // 6: proto.Boolean
	(*String)(nil),                    // 7: proto.String
	(*empty.Empty)(nil),               // 8: google.protobuf.Empty
}
var file_types_proto_depIdxs = []int32{
	1, // 0: proto.DepositAPI.DepositLock:input_type -> proto.DepositLockRequest
	2, // 1: proto.DepositAPI.DepositFetchNotice:input_type -> proto.DepositFetchNoticeRequest
	8, // 2: proto.DepositAPI.DepositEvent:input_type -> google.protobuf.Empty
	3, // 3: proto.WithDrawAPI.WithDrawUnlock:input_type -> proto.WithDrawUnlockRequest
	8, // 4: proto.WithDrawAPI.WithDrawEvent:input_type -> google.protobuf.Empty
	8, // 5: proto.DebugAPI.Ping:input_type -> google.protobuf.Empty
	7, // 6: proto.DebugAPI.HashState:input_type -> proto.String
	6, // 7: proto.DepositAPI.DepositLock:output_type -> proto.Boolean
	6, // 8: proto.DepositAPI.DepositFetchNotice:output_type -> proto.Boolean
	4, // 9: proto.DepositAPI.DepositEvent:output_type -> proto.EventResponse
	6, // 10: proto.WithDrawAPI.WithDrawUnlock:output_type -> proto.Boolean
	4, // 11: proto.WithDrawAPI.WithDrawEvent:output_type -> proto.EventResponse
	0, // 12: proto.DebugAPI.Ping:output_type -> proto.PingResponse
	5, // 13: proto.DebugAPI.HashState:output_type -> proto.StateInfo
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFetchNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithDrawUnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_rawDesc = nil
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DepositAPIClient is the client API for DepositAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepositAPIClient interface {
	DepositLock(ctx context.Context, in *DepositLockRequest, opts ...grpc.CallOption) (*Boolean, error)
	DepositFetchNotice(ctx context.Context, in *DepositFetchNoticeRequest, opts ...grpc.CallOption) (*Boolean, error)
	DepositEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DepositAPI_DepositEventClient, error)
}

type depositAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewDepositAPIClient(cc grpc.ClientConnInterface) DepositAPIClient {
	return &depositAPIClient{cc}
}

func (c *depositAPIClient) DepositLock(ctx context.Context, in *DepositLockRequest, opts ...grpc.CallOption) (*Boolean, error) {
	out := new(Boolean)
	err := c.cc.Invoke(ctx, "/proto.DepositAPI/DepositLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depositAPIClient) DepositFetchNotice(ctx context.Context, in *DepositFetchNoticeRequest, opts ...grpc.CallOption) (*Boolean, error) {
	out := new(Boolean)
	err := c.cc.Invoke(ctx, "/proto.DepositAPI/DepositFetchNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depositAPIClient) DepositEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DepositAPI_DepositEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DepositAPI_serviceDesc.Streams[0], "/proto.DepositAPI/DepositEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &depositAPIDepositEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DepositAPI_DepositEventClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type depositAPIDepositEventClient struct {
	grpc.ClientStream
}

func (x *depositAPIDepositEventClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DepositAPIServer is the server API for DepositAPI service.
type DepositAPIServer interface {
	DepositLock(context.Context, *DepositLockRequest) (*Boolean, error)
	DepositFetchNotice(context.Context, *DepositFetchNoticeRequest) (*Boolean, error)
	DepositEvent(*empty.Empty, DepositAPI_DepositEventServer) error
}

// UnimplementedDepositAPIServer can be embedded to have forward compatible implementations.
type UnimplementedDepositAPIServer struct {
}

func (*UnimplementedDepositAPIServer) DepositLock(context.Context, *DepositLockRequest) (*Boolean, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DepositLock not implemented")
}
func (*UnimplementedDepositAPIServer) DepositFetchNotice(context.Context, *DepositFetchNoticeRequest) (*Boolean, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DepositFetchNotice not implemented")
}
func (*UnimplementedDepositAPIServer) DepositEvent(*empty.Empty, DepositAPI_DepositEventServer) error {
	return status.Errorf(codes.Unimplemented, "method DepositEvent not implemented")
}

func RegisterDepositAPIServer(s *grpc.Server, srv DepositAPIServer) {
	s.RegisterService(&_DepositAPI_serviceDesc, srv)
}

func _DepositAPI_DepositLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepositAPIServer).DepositLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DepositAPI/DepositLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepositAPIServer).DepositLock(ctx, req.(*DepositLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DepositAPI_DepositFetchNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositFetchNoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepositAPIServer).DepositFetchNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DepositAPI/DepositFetchNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepositAPIServer).DepositFetchNotice(ctx, req.(*DepositFetchNoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DepositAPI_DepositEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DepositAPIServer).DepositEvent(m, &depositAPIDepositEventServer{stream})
}

type DepositAPI_DepositEventServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type depositAPIDepositEventServer struct {
	grpc.ServerStream
}

func (x *depositAPIDepositEventServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DepositAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DepositAPI",
	HandlerType: (*DepositAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DepositLock",
			Handler:    _DepositAPI_DepositLock_Handler,
		},
		{
			MethodName: "DepositFetchNotice",
			Handler:    _DepositAPI_DepositFetchNotice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DepositEvent",
			Handler:       _DepositAPI_DepositEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "types.proto",
}

// WithDrawAPIClient is the client API for WithDrawAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WithDrawAPIClient interface {
	WithDrawUnlock(ctx context.Context, in *WithDrawUnlockRequest, opts ...grpc.CallOption) (*Boolean, error)
	WithDrawEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (WithDrawAPI_WithDrawEventClient, error)
}

type withDrawAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewWithDrawAPIClient(cc grpc.ClientConnInterface) WithDrawAPIClient {
	return &withDrawAPIClient{cc}
}

func (c *withDrawAPIClient) WithDrawUnlock(ctx context.Context, in *WithDrawUnlockRequest, opts ...grpc.CallOption) (*Boolean, error) {
	out := new(Boolean)
	err := c.cc.Invoke(ctx, "/proto.WithDrawAPI/WithDrawUnlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *withDrawAPIClient) WithDrawEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (WithDrawAPI_WithDrawEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WithDrawAPI_serviceDesc.Streams[0], "/proto.WithDrawAPI/WithDrawEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &withDrawAPIWithDrawEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WithDrawAPI_WithDrawEventClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type withDrawAPIWithDrawEventClient struct {
	grpc.ClientStream
}

func (x *withDrawAPIWithDrawEventClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WithDrawAPIServer is the server API for WithDrawAPI service.
type WithDrawAPIServer interface {
	WithDrawUnlock(context.Context, *WithDrawUnlockRequest) (*Boolean, error)
	WithDrawEvent(*empty.Empty, WithDrawAPI_WithDrawEventServer) error
}

// UnimplementedWithDrawAPIServer can be embedded to have forward compatible implementations.
type UnimplementedWithDrawAPIServer struct {
}

func (*UnimplementedWithDrawAPIServer) WithDrawUnlock(context.Context, *WithDrawUnlockRequest) (*Boolean, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithDrawUnlock not implemented")
}
func (*UnimplementedWithDrawAPIServer) WithDrawEvent(*empty.Empty, WithDrawAPI_WithDrawEventServer) error {
	return status.Errorf(codes.Unimplemented, "method WithDrawEvent not implemented")
}

func RegisterWithDrawAPIServer(s *grpc.Server, srv WithDrawAPIServer) {
	s.RegisterService(&_WithDrawAPI_serviceDesc, srv)
}

func _WithDrawAPI_WithDrawUnlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithDrawUnlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WithDrawAPIServer).WithDrawUnlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WithDrawAPI/WithDrawUnlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WithDrawAPIServer).WithDrawUnlock(ctx, req.(*WithDrawUnlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WithDrawAPI_WithDrawEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WithDrawAPIServer).WithDrawEvent(m, &withDrawAPIWithDrawEventServer{stream})
}

type WithDrawAPI_WithDrawEventServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type withDrawAPIWithDrawEventServer struct {
	grpc.ServerStream
}

func (x *withDrawAPIWithDrawEventServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _WithDrawAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.WithDrawAPI",
	HandlerType: (*WithDrawAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WithDrawUnlock",
			Handler:    _WithDrawAPI_WithDrawUnlock_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WithDrawEvent",
			Handler:       _WithDrawAPI_WithDrawEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "types.proto",
}

// DebugAPIClient is the client API for DebugAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugAPIClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PingResponse, error)
	HashState(ctx context.Context, in *String, opts ...grpc.CallOption) (*StateInfo, error)
}

type debugAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewDebugAPIClient(cc grpc.ClientConnInterface) DebugAPIClient {
	return &debugAPIClient{cc}
}

func (c *debugAPIClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/proto.DebugAPI/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugAPIClient) HashState(ctx context.Context, in *String, opts ...grpc.CallOption) (*StateInfo, error) {
	out := new(StateInfo)
	err := c.cc.Invoke(ctx, "/proto.DebugAPI/HashState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugAPIServer is the server API for DebugAPI service.
type DebugAPIServer interface {
	Ping(context.Context, *empty.Empty) (*PingResponse, error)
	HashState(context.Context, *String) (*StateInfo, error)
}

// UnimplementedDebugAPIServer can be embedded to have forward compatible implementations.
type UnimplementedDebugAPIServer struct {
}

func (*UnimplementedDebugAPIServer) Ping(context.Context, *empty.Empty) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedDebugAPIServer) HashState(context.Context, *String) (*StateInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashState not implemented")
}

func RegisterDebugAPIServer(s *grpc.Server, srv DebugAPIServer) {
	s.RegisterService(&_DebugAPI_serviceDesc, srv)
}

func _DebugAPI_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugAPIServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DebugAPI/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugAPIServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DebugAPI_HashState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugAPIServer).HashState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DebugAPI/HashState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugAPIServer).HashState(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DebugAPI",
	HandlerType: (*DebugAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _DebugAPI_Ping_Handler,
		},
		{
			MethodName: "HashState",
			Handler:    _DebugAPI_HashState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}
