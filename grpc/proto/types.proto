syntax = "proto3";
package proto;
option go_package = ".;proto";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message PingResponse {
   string ethContract  = 1;
   string ethAddress   = 2;
   string neoContract  = 3;
   string neoAddress   = 4;
}

message DepositLockRequest{
   string nep5TxHash = 1;
   int64  amount     = 2;
   string rHash      = 3;
   string addr       = 4;
}

message FetchNoticeRequest{
   string rHash      = 1;
   string nep5TxHash = 2;
}

message WithdrawUnlockRequest{
  string nep5TxHash = 1;
  string rOrigin    = 2;
  string rHash      = 3;
}

message EventResponse {
  int64  state      = 1;
  string stateStr   = 2;
  string rHash      = 3;
  string txHash     = 4;
}

message LockerStateResponse {
  int64  state        = 1;
  string stateStr     = 2;
  string rHash        = 3;
  string rOrigin      = 4;
  int64  amount       = 5;
  string lockedNep5Hash    = 6;
  uint32 lockedNep5Height  = 7;
  string lockedErc20Hash   = 8;
  uint32 lockedErc20Height = 9;
  string unlockedNep5Hash  = 10;
  uint32 unlockedNep5Height  = 11;
  string unlockedErc20Hash   = 12;
  uint32 unlockedErc20Height = 13;
  string startTime           = 14;
  string lastModifyTime      = 15;
  string userAddr            = 16;
  bool   neoTimeout          = 17;
  bool   ethTimeout          = 18;
  bool   fail                = 19;
  string remark              = 20;
}

message Offset {
    int32   count      = 1;
    int32   offset     = 2;
}

message ParamAndOffset {
    string  value      = 1;
    int32   count      = 2;
    int32   offset     = 3;
}

message LockerStatesResponse {
    repeated LockerStateResponse lockers = 1;
}


service DepositAPI {
    rpc Lock(DepositLockRequest) returns (Boolean){
        option (google.api.http) = {
          post: "/deposit/lock"
          body: "*"
        };
    }

    rpc FetchNotice(FetchNoticeRequest) returns (Boolean){
       option (google.api.http) = {
           post: "/deposit/fetchNotice"
           body: "*"
        };
    }
}

service WithdrawAPI {
   rpc Unlock(WithdrawUnlockRequest) returns (Boolean){
       option (google.api.http) = {
         post: "/withdraw/unlock"
         body: "*"
       };
    }
}

service EventAPI {
    rpc Event(google.protobuf.Empty) returns (stream EventResponse){
       option (google.api.http) = {
         get: "/event/state"
       };
    }
}

service InfoAPI {
    rpc Ping(google.protobuf.Empty) returns (PingResponse){
        option (google.api.http) = {
          get: "/info/ping"
        };
    }

    rpc LockerInfo(String) returns (LockerStateResponse){
        option (google.api.http) = {
          get: "/info/lockerInfo"
        };
    }

    rpc LockerInfosByAddr(ParamAndOffset) returns (LockerStatesResponse){
        option (google.api.http) = {
          get: "/info/lockerInfosByAddr"
        };
    }

    rpc LockerInfos(Offset) returns (LockerStatesResponse){
        option (google.api.http) = {
          get: "/info/lockerInfos"
        };
    }
}

message lockerInfosCountResponse  {
    map<string, int32> counts = 1;
}

message HashTimerResponse  {
    string rHash          = 1;
    string rOrigin        = 2;
    int64  amount         = 3;
    string userAddr       = 4;
    uint32 lockedHeight   = 5;
    uint32 unlockedHeight = 6;
}

service DebugAPI {
    rpc HashTimer(String) returns (HashTimerResponse){
        option (google.api.http) = {
          get: "/debug/hashTimer"
        };
    }

    rpc LockerInfosCount(google.protobuf.Empty) returns (lockerInfosCountResponse){
        option (google.api.http) = {
          get: "/debug/lockerInfosCount"
        };
    }

    rpc LockerInfosByState(ParamAndOffset) returns (LockerStatesResponse){
        option (google.api.http) = {
          get: "/debug/lockerInfosByState"
        };
    }
}

message Boolean {
    bool value = 1;
}

message String {
    string value = 1;
}
